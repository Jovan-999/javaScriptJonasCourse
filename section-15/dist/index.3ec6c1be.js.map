{"mappings":"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","sources":["clean.js"],"sourcesContent":["'strict mode';\r\n\r\n// var budget = [\r\n//   { value: 250, description: 'Sold old TV üì∫', user: 'jonas' },\r\n//   { value: -45, description: 'Groceries ü•ë', user: 'jonas' },\r\n//   { value: 3500, description: 'Monthly salary üë©‚Äçüíª', user: 'jonas' },\r\n//   { value: 300, description: 'Freelancing üë©‚Äçüíª', user: 'jonas' },\r\n//   { value: -1100, description: 'New iPhone üì±', user: 'jonas' },\r\n//   { value: -20, description: 'Candy üç≠', user: 'matilda' },\r\n//   { value: -125, description: 'Toys üöÇ', user: 'matilda' },\r\n//   { value: -1800, description: 'New Laptop üíª', user: 'jonas' },\r\n// ];\r\n\r\n// var limits = {\r\n//   jonas: 1500,\r\n//   matilda: 100,\r\n// };\r\n\r\n// var add = function (value, description, user) {\r\n//   if (!user) user = 'jonas';\r\n//   user = user.toLowerCase();\r\n\r\n//   var lim;\r\n//   if (limits[user]) {\r\n//     lim = limits[user];\r\n//   } else {\r\n//     lim = 0;\r\n//   }\r\n\r\n//   if (value <= lim) {\r\n//     budget.push({ value: -value, description: description, user: user });\r\n//   }\r\n// };\r\n// add(10, 'Pizza üçï');\r\n// add(100, 'Going to movies üçø', 'Matilda');\r\n// add(200, 'Stuff', 'Jay');\r\n// console.log(budget);\r\n\r\n// var check = function () {\r\n//   for (var el of budget) {\r\n//     var lim;\r\n//     if (limits[el.user]) {\r\n//       lim = limits[el.user];\r\n//     } else {\r\n//       lim = 0;\r\n//     }\r\n\r\n//     if (el.value < -lim) {\r\n//       el.flag = 'limit';\r\n//     }\r\n//   }\r\n// };\r\n// check();\r\n\r\n// console.log(budget);\r\n\r\n// var bigExpenses = function (limit) {\r\n//   var output = '';\r\n//   for (var el of budget) {\r\n//     if (el.value <= -limit) {\r\n//       output += el.description.slice(-2) + ' / '; // Emojis are 2 chars\r\n//     }\r\n//   }\r\n//   output = output.slice(0, -2); // Remove last '/ '\r\n//   console.log(output);\r\n// };\r\n\r\n// fixing bad old code to proffesional\r\n\r\nconst budget = Object.freeze([\r\n  { value: 250, description: 'Sold old TV üì∫', user: 'jonas' },\r\n  { value: -45, description: 'Groceries ü•ë', user: 'jonas' },\r\n  { value: 3500, description: 'Monthly salary üë©‚Äçüíª', user: 'jonas' },\r\n  { value: 300, description: 'Freelancing üë©‚Äçüíª', user: 'jonas' },\r\n  { value: -1100, description: 'New iPhone üì±', user: 'jonas' },\r\n  { value: -20, description: 'Candy üç≠', user: 'matilda' },\r\n  { value: -125, description: 'Toys üöÇ', user: 'matilda' },\r\n  { value: -1800, description: 'New Laptop üíª', user: 'jonas' },\r\n]);\r\n\r\nconst spendingLimits = Object.freeze({\r\n  jonas: 1500,\r\n  matilda: 100,\r\n});\r\n// spendingLimits.jay = 200;\r\n\r\n// const limit = spendingLimits[user] ? spendingLimits[user] : 0;\r\nconst getLimit = (limits, user) => limits?.[user] ?? 0;\r\n\r\n// Pure function\r\nconst addExpense = function (\r\n  state,\r\n  limits,\r\n  value,\r\n  description,\r\n  user = 'jonas'\r\n) {\r\n  const cleanUser = user.toLowerCase();\r\n\r\n  // let lim;\r\n  // if (spendingLimits[user]) {\r\n  //   lim = spendingLimits[user];\r\n  // } else {\r\n  //   lim = 0;\r\n  // } ‚¨á‚¨á‚¨á‚¨á‚¨á‚¨á‚¨á‚¨á‚¨á‚¨á‚¨á‚¨á‚¨á‚¨á‚¨á‚¨á‚¨á‚¨á‚¨á\r\n\r\n  // const limit = spendingLimits?.[user] ?? 0 // same ‚¨á‚¨á‚¨á‚¨á‚¨Ü‚¨Ü‚¨Ü‚¨Ü\r\n  // const limit = getLimit(user);\r\n\r\n  return value <= getLimit(limits, cleanUser)\r\n    ? [...state, { value: -value, description, user: cleanUser }]\r\n    : state;\r\n};\r\n\r\nconst newBudget1 = addExpense(budget, spendingLimits, 10, 'Pizza üçï');\r\nconst newBudget2 = addExpense(\r\n  newBudget1,\r\n  spendingLimits,\r\n  100,\r\n  'Going to movies üçø',\r\n  'Matilda'\r\n);\r\nconst newBudget3 = addExpense(newBudget2, spendingLimits, 200, 'Stuff', 'Jay');\r\n\r\n// const checkExpenses2 = function (state, limits) {\r\n//   return state.map(entry => {\r\n//     return entry.value < -getLimit(limits, entry.user)\r\n//       ? { ...entry, flag: 'limit' }\r\n//       : entry;\r\n//   });\r\n//   // for (const entry of newBudget3)\r\n//   //   if (entry.value < -getLimit(limits, entry.user)) entry.flag = 'limit';\r\n// };\r\n\r\nconst checkExpenses = (state, limits) =>\r\n  state.map(\r\n    entry =>\r\n      entry.value < -getLimit(limits, entry.user)\r\n        ? { ...entry, flag: 'limit' }\r\n        : entry\r\n    // let lim;\r\n    // if (spendingLimits[entry.user]) {\r\n    //   lim = spendingLimits[entry.user];\r\n    // } else {\r\n    //   lim = 0;\r\n    // }\r\n\r\n    // const limit = getLimit(entry.user);\r\n  );\r\n\r\nconst finalBudget = checkExpenses(newBudget3, spendingLimits);\r\nconsole.log(finalBudget);\r\n\r\n// Impure\r\nconst logBigExpenses = function (state, bigLimit) {\r\n  const bigExpenses = state\r\n    .filter(entry => entry.value <= -bigLimit)\r\n    .map(entry => entry.description.slice(-2))\r\n    .join(' / ');\r\n  // .reduce((str, cur) => `${str} / ${cur.description.slice(-2)}`, '');\r\n  // if (entry.value <= -bigLimit) {\r\n  //   output += `${entry.description.slice(-2)} / `; // Emojis are 2 characters\r\n  // }\r\n\r\n  console.log(bigExpenses);\r\n\r\n  // let output = '';\r\n  // for (const entry of budget)\r\n  //   output +=\r\n  //     entry.value <= -bigLimit ? `${entry.description.slice(-2)} / ` : '';\r\n  // output = output.slice(0, -2); // Remove last '/ '\r\n  // console.log(output);\r\n};\r\n\r\nlogBigExpenses(finalBudget, 500);\r\n"],"names":[],"version":3,"file":"index.3ec6c1be.js.map","sourceRoot":"/__parcel_source_root/"}